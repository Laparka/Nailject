"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toSymbolPath = exports.toImportFilter = void 0;
const utils_1 = require("../utils");
function toImportFilter(importFrom, outputDir) {
    const importPath = utils_1.getRelativePath(outputDir, importFrom);
    switch (importFrom.kind) {
        case 'Default': {
            return `import ${importFrom.name} from '${importPath}';`;
        }
        case 'Named': {
            if (importFrom.alias === importFrom.name) {
                return `import { ${importFrom.name} } from '${importPath}';`;
            }
            return `import { ${importFrom.name} as ${importFrom.alias} } from '${importPath}';`;
        }
        case 'Namespace': {
            return `import * as ${importFrom.alias} from '${importPath}';`;
        }
    }
    throw Error(`The import-kind is not supported`);
}
exports.toImportFilter = toImportFilter;
function toSymbolPath(symbolDescriptor) {
    const symbolPath = [];
    if (symbolDescriptor.autoGenerated) {
        symbolPath.push('__SERVICE_TYPE_SYMBOLS');
    }
    if (symbolDescriptor.symbolNamespace.length !== 0) {
        symbolPath.push(symbolDescriptor.symbolNamespace);
    }
    symbolPath.push(symbolDescriptor.symbolId);
    return symbolPath.join('.');
}
exports.toSymbolPath = toSymbolPath;
